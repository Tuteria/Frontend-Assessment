name: CI

on:
  push:
  pull_request:
    branches:
      - develop
      - release/*
      - MlkMahmud-master

jobs:
  test:
    name: Building codebase on Node v${{ matrix.nodejs }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: sameersbn/postgresql:12-20200524
        env:
          DB_USER: qa_user
          DB_PASS: qa_password
          DB_NAME: ci_db
          PG_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      matrix:
        nodejs: [12]
        python_version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs }}
          # rep-token: ${{secrets.GITHUB_TOKEN}}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install Python Dependencies and update migrations
        run: |
          cd data-layer
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
          $HOME/.poetry/bin/poetry install
          $HOME/.poetry/bin/poetry run alembic upgrade head
        env:
          DATABASE_URL: postgresql://qa_user:qa_password@localhost:5432/ci_db

      - name: Install
        run: |
          yarn install
          npm install -g nyc
          yarn bootstrap

      # - name: Lint
      #   run: yarn lint

      - name: Test all Services and components
        run: |
          yarn notes db:generate
          nyc yarn notes test
        env:
          DATABASE_URL: postgresql://qa_user:qa_password@localhost:5432/ci_db?schema=public
          TEST_DATABASE_URL: postgresql://qa_user:qa_password@localhost:5432/ci_db?schema=public
          DB_PROVIDER: postgresql
    # - name: Report
    #   if: matrix.nodejs >= 14
    #   run: |
    #     nyc report --reporter=text-lcov > coverage.lcov
    #     bash <(curl -s https://codecov.io/bash)
    #   env:
    #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
